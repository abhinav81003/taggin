// Copyright 2015-present 650 Industries. All rights reserved.

#import <EXConstants/EXConstants.h>
#import <ExpoModulesCore/EXConstantsInterface.h>

#import <WebKit/WKWebView.h>

@interface EXConstants () {
  WKWebView *webView;
}

@property (nonatomic, strong) NSString *webViewUserAgent;
@property (nonatomic, weak) id<EXConstantsInterface> constantsService;

@end

@implementation EXConstants

<<<<<<< HEAD
UM_REGISTER_MODULE();
=======
EX_REGISTER_MODULE();
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707

+ (const NSString *)exportedModuleName
{
  return @"ExponentConstants";
}

<<<<<<< HEAD
- (void)setModuleRegistry:(UMModuleRegistry *)moduleRegistry
=======
- (void)setModuleRegistry:(EXModuleRegistry *)moduleRegistry
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
{
  _constantsService = [moduleRegistry getModuleImplementingProtocol:@protocol(EXConstantsInterface)];
}

- (NSDictionary *)constantsToExport
{
  return [_constantsService constants];
}

<<<<<<< HEAD
UM_EXPORT_METHOD_AS(getWebViewUserAgentAsync,
                    getWebViewUserAgentWithResolver:(UMPromiseResolveBlock)resolve
                    rejecter:(UMPromiseRejectBlock)reject)
=======
EX_EXPORT_METHOD_AS(getWebViewUserAgentAsync,
                    getWebViewUserAgentWithResolver:(EXPromiseResolveBlock)resolve
                    rejecter:(EXPromiseRejectBlock)reject)
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
{
  __weak EXConstants *weakSelf = self;
  dispatch_async(dispatch_get_main_queue(), ^{
    __strong EXConstants *strongSelf = weakSelf;
    if (strongSelf) {
      if (!strongSelf.webViewUserAgent) {
        // We need to retain the webview because it runs an async task.
        strongSelf->webView = [[WKWebView alloc] init];

        [strongSelf->webView evaluateJavaScript:@"window.navigator.userAgent;" completionHandler:^(id _Nullable result, NSError * _Nullable error) {
          if (error) {
            reject(@"ERR_CONSTANTS", error.localizedDescription, error);
            return;
          }
          
          strongSelf.webViewUserAgent = [NSString stringWithFormat:@"%@", result];
<<<<<<< HEAD
          resolve(UMNullIfNil(strongSelf.webViewUserAgent));
=======
          resolve(EXNullIfNil(strongSelf.webViewUserAgent));
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
          // Destroy the webview now that it's task is complete.
          strongSelf->webView = nil;
        }];
      } else {
<<<<<<< HEAD
        resolve(UMNullIfNil(strongSelf.webViewUserAgent));
=======
        resolve(EXNullIfNil(strongSelf.webViewUserAgent));
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
      }
    }
  });
}

@end
