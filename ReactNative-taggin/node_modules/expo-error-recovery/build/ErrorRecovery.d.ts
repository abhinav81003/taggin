import './ErrorRecovery.fx';
<<<<<<< HEAD
export declare const recoveredProps: Record<string, any> | null;
export declare type ErrorRecoveryProps = Record<string, any>;
=======
export declare const recoveredProps: ErrorRecoveryProps | null;
export declare type ErrorRecoveryProps = Record<string, any>;
/**
 * Set arbitrary error recovery props. If your project crashes in production as a result of a fatal
 * JS error, Expo will reload your project. If you've set these props, they'll be passed to your
 * reloaded project's initial props under `exp.errorRecovery`. Access to `localStorage` is required
 * on web, or else this will simply be a no-op.
 *
 * [Read more about error handling with Expo](/guides/errors).
 * @param props An object which will be passed to your reloaded project's initial props if the
 * project was reloaded as a result of a fatal JS error.
 */
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
export declare function setRecoveryProps(props: ErrorRecoveryProps): void;
