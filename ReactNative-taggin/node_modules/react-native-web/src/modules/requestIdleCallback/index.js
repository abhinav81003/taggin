/**
 * Copyright (c) Nicolas Gallagher.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */

import { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';

<<<<<<< HEAD
const _requestIdleCallback = function(cb: Function, options?: Object) {
=======
const _requestIdleCallback = function (cb: Function, options?: Object) {
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
  return setTimeout(() => {
    const start = Date.now();
    cb({
      didTimeout: false,
      timeRemaining() {
        return Math.max(0, 50 - (Date.now() - start));
      }
    });
  }, 1);
};

<<<<<<< HEAD
// $FlowFixMe (TimeoutID type is not recognized by eslint)
const _cancelIdleCallback = function(id) {
=======
const _cancelIdleCallback = function (id) {
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
  clearTimeout(id);
};

const isSupported = canUseDOM && typeof window.requestIdleCallback !== 'undefined';

<<<<<<< HEAD
const requestIdleCallback = isSupported ? window.requestIdleCallback : _requestIdleCallback;
const cancelIdleCallback = isSupported ? window.cancelIdleCallback : _cancelIdleCallback;
=======
const requestIdleCallback: (cb: any, options?: any) => TimeoutID = isSupported
  ? window.requestIdleCallback
  : _requestIdleCallback;
const cancelIdleCallback: (TimeoutID) => void = isSupported
  ? window.cancelIdleCallback
  : _cancelIdleCallback;
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707

export default requestIdleCallback;
export { cancelIdleCallback };
