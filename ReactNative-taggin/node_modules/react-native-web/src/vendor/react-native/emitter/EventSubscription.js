/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
<<<<<<< HEAD
 * @format
 * @flow strict-local
=======
 * @flow strict
 * @format
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
 */

'use strict';

<<<<<<< HEAD
import type EventSubscriptionVendor from './EventSubscriptionVendor';

/**
 * EventSubscription represents a subscription to a particular event. It can
 * remove its own subscription.
 */
class EventSubscription {
  eventType: string;
  key: number;
  subscriber: EventSubscriptionVendor;

  /**
   * @param {EventSubscriptionVendor} subscriber the subscriber that controls
   *   this subscription.
   */
  constructor(subscriber: EventSubscriptionVendor) {
    this.subscriber = subscriber;
  }

  /**
   * Removes this subscription from the subscriber that controls it.
   */
  remove() {
    this.subscriber.removeSubscription(this);
  }
}

export default EventSubscription;
=======
// This exists as a separate file only to avoid circular dependencies from
// using this in `_EmitterSubscription`. Combine this back into `EventEmitter`
// after migration and cleanup is done.

export interface EventSubscription {
  remove(): void;
}
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
