// Copyright 2018-present 650 Industries. All rights reserved.

<<<<<<< HEAD
#import <UMCore/UMModuleRegistry.h>
#import <EXKeepAwake/EXKeepAwake.h>
#import <UMCore/UMAppLifecycleService.h>
#import <UMCore/UMUtilities.h>

@interface EXKeepAwake () <UMAppLifecycleListener>

@property (nonatomic, weak) id<UMAppLifecycleService> lifecycleManager;
@property (nonatomic, weak) UMModuleRegistry *moduleRegistry;
=======
#import <ExpoModulesCore/EXModuleRegistry.h>
#import <EXKeepAwake/EXKeepAwake.h>
#import <ExpoModulesCore/EXAppLifecycleService.h>
#import <ExpoModulesCore/EXUtilities.h>

@interface EXKeepAwake () <EXAppLifecycleListener>

@property (nonatomic, weak) id<EXAppLifecycleService> lifecycleManager;
@property (nonatomic, weak) EXModuleRegistry *moduleRegistry;
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707

@end

@implementation EXKeepAwake {
  NSMutableSet *_activeTags;
}

- (instancetype)init {
  self = [super init];
  _activeTags = [NSMutableSet set];
  return self;
}

<<<<<<< HEAD
UM_EXPORT_MODULE(ExpoKeepAwake);

# pragma mark - UMModuleRegistryConsumer

- (void)setModuleRegistry:(UMModuleRegistry *)moduleRegistry
=======
EX_EXPORT_MODULE(ExpoKeepAwake);

# pragma mark - EXModuleRegistryConsumer

- (void)setModuleRegistry:(EXModuleRegistry *)moduleRegistry
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
{
  if (_moduleRegistry) {
    [_lifecycleManager unregisterAppLifecycleListener:self];
  }
  
  _lifecycleManager = nil;
  
  if (moduleRegistry) {
<<<<<<< HEAD
    _lifecycleManager = [moduleRegistry getModuleImplementingProtocol:@protocol(UMAppLifecycleService)];
=======
    _lifecycleManager = [moduleRegistry getModuleImplementingProtocol:@protocol(EXAppLifecycleService)];
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
  }
  
  if (_lifecycleManager) {
    [_lifecycleManager registerAppLifecycleListener:self];
  }
}

<<<<<<< HEAD
UM_EXPORT_METHOD_AS(activate, activate:(NSString *)tag
                    resolve:(UMPromiseResolveBlock)resolve
                    reject:(UMPromiseRejectBlock)reject)
{
  if(![self shouldBeActive]) {
    [UMUtilities performSynchronouslyOnMainThread:^{
=======
EX_EXPORT_METHOD_AS(activate, activate:(NSString *)tag
                    resolve:(EXPromiseResolveBlock)resolve
                    reject:(EXPromiseRejectBlock)reject)
{
  if(![self shouldBeActive]) {
    [EXUtilities performSynchronouslyOnMainThread:^{
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
      [[UIApplication sharedApplication] setIdleTimerDisabled:YES];
    }];
  }
  [_activeTags addObject:tag];
  resolve(@YES);
}

<<<<<<< HEAD
UM_EXPORT_METHOD_AS(deactivate, deactivate:(NSString *)tag
                    resolve:(UMPromiseResolveBlock)resolve
                    reject:(UMPromiseRejectBlock)reject)
{
  [_activeTags removeObject:tag];
  if (![self shouldBeActive]) {
    [UMUtilities performSynchronouslyOnMainThread:^{
=======
EX_EXPORT_METHOD_AS(deactivate, deactivate:(NSString *)tag
                    resolve:(EXPromiseResolveBlock)resolve
                    reject:(EXPromiseRejectBlock)reject)
{
  [_activeTags removeObject:tag];
  if (![self shouldBeActive]) {
    [EXUtilities performSynchronouslyOnMainThread:^{
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
      [[UIApplication sharedApplication] setIdleTimerDisabled:NO];
    }];
  }
  resolve(@YES);
}

<<<<<<< HEAD
# pragma mark - UMAppLifecycleListener

- (void)onAppBackgrounded {
  [UMUtilities performSynchronouslyOnMainThread:^{
=======
# pragma mark - EXAppLifecycleListener

- (void)onAppBackgrounded {
  [EXUtilities performSynchronouslyOnMainThread:^{
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
    [[UIApplication sharedApplication] setIdleTimerDisabled:NO];
  }];
}

- (void)onAppForegrounded {
  if ([self shouldBeActive]) {
<<<<<<< HEAD
    [UMUtilities performSynchronouslyOnMainThread:^{
=======
    [EXUtilities performSynchronouslyOnMainThread:^{
>>>>>>> e75a71e2c6ac3e5d484a463ebda2ebf8c6ccb707
      [[UIApplication sharedApplication] setIdleTimerDisabled:YES];
    }];
  }
}

- (BOOL)shouldBeActive {
  return [_activeTags count] > 0;
}

@end
