{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputComponent } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport colors from \"../assets/colors\";\nimport * as Location from 'expo-location';\n\nvar UploadPost = function UploadPost(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      ignored = _useReducer2[0],\n      forceUpdate = _useReducer2[1];\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      description = _useState4[0],\n      setDescription = _useState4[1];\n\n  var _useState5 = useState(route.params.username),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userID = _useState6[0],\n      setUserID = _useState6[1];\n\n  var users = [route.params.username];\n\n  var _useState7 = useState([false, false, false]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedUser = _useState8[0],\n      setSelectedUser = _useState8[1];\n\n  var HandleSelectingUser = function HandleSelectingUser(index) {\n    var selections = selectedUser;\n    selections[index] = !selections[index];\n    setSelectedUser(selections);\n    setUserID(users[index]);\n    forceUpdate();\n  };\n\n  var tags = [\"#USC\", \"#Parkside\", \"#CSMajor\"];\n\n  var _useState9 = useState([false, false, false]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedTags = _useState10[0],\n      setSelectedTags = _useState10[1];\n\n  var HandleSelectingTag = function HandleSelectingTag(index) {\n    var selections = selectedTags;\n    selections[index] = !selections[index];\n    setSelectedTags(selections);\n    setDescription(tags[index]);\n    forceUpdate();\n  };\n\n  var _useState11 = useState(route.params.loc),\n      _useState12 = _slicedToArray(_useState11, 2),\n      location = _useState12[0],\n      setLocation = _useState12[1];\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      errorMsg = _useState14[0],\n      setErrorMsg = _useState14[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var HandleUpload = function HandleUpload() {\n    var latitude = location != null ? location.coords.latitude : 0;\n    var longitude = location != null ? location.coords.longitude : 0;\n    axios.post(\"https://fierce-mountain-79115.herokuapp.com/uploadPost\", {\n      title: title,\n      userID: userID,\n      description: description,\n      latitude: latitude,\n      longitude: longitude\n    }).then(function () {\n      navigation.navigate('Home');\n    }).catch(function () {\n      alert(\"Could not post at the moment. Please try again\");\n    });\n  };\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          onPress: function onPress() {\n            HandleUpload();\n          },\n          title: \"Upload\"\n        });\n      }\n    });\n  });\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Text, {\n    style: styles.heading\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Your thought\",\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setTitle(text);\n    }\n  }), React.createElement(View, {\n    style: styles.tagBar\n  }, React.createElement(Text, {\n    style: styles.tagsTextHead\n  }, \"Tags:\"), tags.map(function (tag, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      style: [styles.tag, {\n        backgroundColor: selectedTags[index] ? colors.secondary : colors.sixth\n      }],\n      onPress: function onPress() {\n        return HandleSelectingTag(index);\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: selectedTags[index] ? \"white\" : \"black\"\n      }\n    }, tag));\n  })), React.createElement(View, {\n    style: styles.userBox\n  }, React.createElement(Text, {\n    style: styles.tagsTextHead\n  }, \" Select User \"), React.createElement(View, {\n    style: styles.userNameBox\n  }, users.map(function (user, index) {\n    return React.createElement(TouchableOpacity, {\n      key: index,\n      style: [styles.tag, {\n        backgroundColor: selectedUser[index] ? colors.third : colors.primary\n      }],\n      onPress: function onPress() {\n        return HandleSelectingUser(index);\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: selectedUser[index] ? \"white\" : \"black\"\n      }\n    }, user));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 17\n  },\n  inputBox: {\n    width: \"90%\",\n    height: \"42%\",\n    justifyContent: 'flex-start',\n    alignItems: 'flex-start',\n    alignContent: 'flex-start',\n    textAlignVertical: 'top'\n  },\n  tagBar: {\n    width: \"120%\",\n    height: \"7%\",\n    paddingHorizontal: \"15%\",\n    borderWidth: 1,\n    borderColor: \"lightgrey\",\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  tagsTextHead: {\n    fontWeight: '600',\n    marginRight: 7\n  },\n  tag: {\n    borderRadius: 10,\n    minWidth: \"15%\",\n    margin: 4,\n    padding: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  userBox: {\n    padding: 10,\n    margin: 5,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  userNameBox: {\n    flexDirection: 'row',\n    margin: 20\n  }\n});\nexport default UploadPost;","map":{"version":3,"sources":["/Users/Abhi/Developer/hashtaggin/ReactNative-taggin/Screens/UploadPost.js"],"names":["React","useState","useEffect","useReducer","TextInputComponent","axios","colors","Location","UploadPost","navigation","route","x","ignored","forceUpdate","title","setTitle","description","setDescription","params","username","userID","setUserID","users","selectedUser","setSelectedUser","HandleSelectingUser","index","selections","tags","selectedTags","setSelectedTags","HandleSelectingTag","loc","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","HandleUpload","latitude","coords","longitude","post","then","navigate","catch","alert","useLayoutEffect","setOptions","headerRight","styles","container","heading","inputBox","text","tagBar","tagsTextHead","map","tag","backgroundColor","secondary","sixth","color","userBox","userNameBox","user","third","primary","StyleSheet","create","flex","alignItems","fontSize","width","height","justifyContent","alignContent","textAlignVertical","paddingHorizontal","borderWidth","borderColor","flexDirection","fontWeight","marginRight","borderRadius","minWidth","margin","padding"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useReducer} from 'react';\nimport { SafeAreaView, StyleSheet, TextInput, TextInputComponent,ScrollView, TouchableOpacity, View, Text, Image, Pressable,Button } from 'react-native';\nimport axios from 'axios';\nimport colors from '../assets/colors';\nimport * as Location from 'expo-location';\n\nconst UploadPost = ({navigation,route}) => {\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n    //all the variables about data to be posted\n    const [title, setTitle] =useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [userID,setUserID] = useState(route.params.username); //fetch from user's data\n    //temporary user selection\n    const users = [route.params.username]\n    const [selectedUser, setSelectedUser] = useState([false,false,false])\n    const HandleSelectingUser = (index) => {\n        var selections = selectedUser;\n        selections[index] = !selections[index];\n        setSelectedUser(selections);\n        setUserID(users[index]);\n        forceUpdate();\n    }\n    //tags and selecting them\n    const tags = [\"#USC\", \"#Parkside\", \"#CSMajor\"] //change this to fetching from the users data\n    const [selectedTags, setSelectedTags] = useState([false,false,false])\n    const HandleSelectingTag = (index) => {\n        var selections = selectedTags;\n        selections[index] = !selections[index];\n        setSelectedTags(selections);\n        setDescription(tags[index])\n        forceUpdate();\n    }\n    //getting location\n    const [location, setLocation] = useState(route.params.loc);\n    const [errorMsg, setErrorMsg] = useState(null);\n    useEffect(() => {\n        (async () => {\n          let { status } = await Location.requestForegroundPermissionsAsync();\n          if (status !== 'granted') {\n            setErrorMsg('Permission to access location was denied');\n            return;\n          }\n          let location = await Location.getCurrentPositionAsync({});\n          setLocation(location);\n        })();\n      }, []);\n    //for the upload button on the top right\n    const HandleUpload = () => {\n        const latitude = location!= null? location.coords.latitude : 0;\n        const longitude = location!= null? location.coords.longitude : 0;\n        axios.post(\"https://fierce-mountain-79115.herokuapp.com/uploadPost\",\n        {title: title, userID: userID, description: description, latitude: latitude, longitude: longitude})\n        .then(function() {\n            navigation.navigate('Home');\n        })\n        .catch(function () {\n            alert(\"Could not post at the moment. Please try again\");\n        });\n    }\n    React.useLayoutEffect(() => {\n        navigation.setOptions({\n          headerRight: ()=> (\n              <Button onPress ={() => {HandleUpload();}} title= {\"Upload\"}/>\n          ),\n        });\n    })\n    \n    return ( \n        <View style={styles.container}>\n            <Text  style={styles.heading}>\n            </Text>\n            <TextInput style = {styles.inputBox}\n                placeholder = \"Your thought\"\n                multiline = {true}\n                onChangeText = { (text)=> setTitle(text)}\n            />\n            <View style={styles.tagBar}>\n                <Text style={styles.tagsTextHead}>\n                    Tags:\n                </Text>\n                {tags.map((tag, index) => {\n                    return(\n                    <TouchableOpacity key={index} \n                                      style={[styles.tag, {backgroundColor: selectedTags[index]? colors.secondary : colors.sixth}]}\n                                      onPress = { () => HandleSelectingTag(index)}>\n                        <Text style={{color:  selectedTags[index]? \"white\":\"black\"}}>\n                            {tag}\n                        </Text>\n                    </TouchableOpacity>\n                    );\n                })}\n            </View>\n            <View style={styles.userBox}>\n                <Text style={styles.tagsTextHead}> Select User </Text>\n                <View style={styles.userNameBox}>\n                {users.map((user, index) => {\n                    return(\n                    <TouchableOpacity key={index} \n                                      style={[styles.tag, {backgroundColor: selectedUser[index]? colors.third : colors.primary}]}\n                                      onPress = { () => HandleSelectingUser(index)}>\n                        <Text style={{color:  selectedUser[index]? \"white\":\"black\"}}>\n                            {user}\n                        </Text>\n                    </TouchableOpacity>\n                    );\n                })}\n                </View>\n            </View>\n        </View>\n     );\n}\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        alignItems: 'center'\n    },\n    heading : {\n        fontSize: 17\n    },\n    inputBox: {\n        width: \"90%\",\n        height: \"42%\",\n        justifyContent: 'flex-start',\n        alignItems: 'flex-start',\n        alignContent: 'flex-start',\n        textAlignVertical: 'top',\n    },\n    tagBar: {\n        width: \"120%\",\n        height: \"7%\",\n        paddingHorizontal: \"15%\",\n        borderWidth: 1,\n        borderColor: \"lightgrey\",\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        flexDirection:'row',\n    },\n    tagsTextHead: {\n        fontWeight: '600',\n        marginRight: 7\n    },  \n    tag:{\n        borderRadius: 10,\n        minWidth: \"15%\",\n        margin: 4,\n        padding: 5,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    userBox: {\n        padding: 10,\n        margin: 5,\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    userNameBox: {\n        flexDirection: 'row',\n        margin: 20,\n    },\n})\nexport default UploadPost;"]},"metadata":{},"sourceType":"module"}