{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useContext } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport colors from \"../assets/colors\";\nimport axios from 'axios';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var myLoginDetailsStorageKey = \"loginCred\";\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      viewPassword = _useState6[0],\n      setViewPassword = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var saveMyLoginInfo = function saveMyLoginInfo(myUserInfo) {\n    return _regeneratorRuntime.async(function saveMyLoginInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"rat\", myUserInfo));\n\n          case 3:\n            _context.next = 9;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n            Alert.alert(\"Couldn't Save Login Info\");\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var handleContinuePress = function handleContinuePress() {\n    setLoading(true);\n\n    if (username === \"\" || password === \"\") {\n      setLoading(false);\n\n      if (Platform.OS === 'web') {\n        alert(\"Kindly fill all the fields to continue\");\n      } else {\n        Alert.alert(\"All fields are compulsory\", \"Kindly fill all the fields to continue\", [{\n          text: \"Go Back\"\n        }]);\n      }\n    } else {\n      axios.post(\"https://fierce-mountain-79115.herokuapp.com/login\", {\n        username: username,\n        password: password\n      }).then(function _callee(res) {\n        var myUserInfo;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setLoading(false);\n\n                if (!(res.data.status != 'error')) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                myUserInfo = res.data.message;\n                _context2.next = 5;\n                return _regeneratorRuntime.awrap(saveMyLoginInfo(myUserInfo));\n\n              case 5:\n                navigation.navigate(\"Root\", {\n                  username: username\n                });\n                _context2.next = 9;\n                break;\n\n              case 8:\n                Alert.alert(res.data.error);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  };\n\n  var viewConstants = {\n    containerTopMargin: '10%',\n    containerBottomMargin: '16%',\n    containerHorizontalMargins: '7%',\n    headingFontSize: 34,\n    headingWeight: '800',\n    headingFontSizeLandscape: 34,\n    headerBottomMargin: 5,\n    textSize: 15,\n    textSizeLandscape: 18,\n    headerTextLandscapePadding: 80,\n    labelPadding: 10,\n    textBoxBorderWidth: 2,\n    textBoxBorderRadius: 13,\n    textBoxPadding: 10,\n    formHorizontalMargin: 40,\n    formBottomMarginLandscape: 30,\n    buttonTextLineHeight: 21,\n    buttonTextLineHeightLandscape: 21,\n    buttonHeight: 70,\n    buttonHeightLandscape: 45\n  };\n  var styles = StyleSheet.create({\n    screenBackground: {\n      flex: 1,\n      backgroundColor: colors.primary,\n      padding: 30,\n      paddingTop: '30%'\n    },\n    container: {\n      marginHorizontal: viewConstants.containerHorizontalMargins,\n      flex: 1,\n      justifyContent: 'center'\n    },\n    header: {\n      marginBottom: viewConstants.headerBottomMargin,\n      flex: 0,\n      flexDirection: 'column',\n      width: '100%'\n    },\n    headerTitle: {\n      fontWeight: viewConstants.headingWeight,\n      fontSize: viewConstants.headingFontSize,\n      color: colors.third,\n      paddingVertical: '3%',\n      paddingTop: 0\n    },\n    headerText: {\n      fontSize: viewConstants.textSize,\n      paddingTop: 0,\n      color: '#200111'\n    },\n    linkText: {\n      textDecorationLine: 'underline',\n      paddingVertical: '3%',\n      color: 'darkblue',\n      fontSize: viewConstants.textSize\n    },\n    signUpForm: {\n      flex: 1,\n      color: 'black'\n    },\n    details: {\n      flexDirection: 'column',\n      marginHorizontal: viewConstants.formHorizontalMargin,\n      marginBottom: 0\n    },\n    password: {\n      flexDirection: 'column',\n      marginHorizontal: viewConstants.formHorizontalMargin,\n      marginBottom: 0\n    },\n    label: {\n      fontSize: viewConstants.textSize,\n      padding: viewConstants.labelPadding,\n      color: colors.third,\n      fontWeight: '500',\n      marginHorizontal: 0\n    },\n    inputText: {\n      borderWidth: viewConstants.textBoxBorderWidth,\n      borderColor: 'white',\n      borderWidth: 1,\n      width: \"100%\",\n      backgroundColor: colors.fourth,\n      borderRadius: viewConstants.textBoxBorderRadius,\n      textAlign: 'center',\n      shadowColor: 'grey',\n      shadowOffset: {\n        width: 2,\n        height: 3\n      },\n      shadowOpacity: 0.3,\n      padding: viewConstants.textBoxPadding,\n      fontSize: viewConstants.textSize,\n      marginHorizontal: viewConstants.textBoxPadding,\n      color: 'black'\n    },\n    buttonText: {\n      fontSize: viewConstants.textSize,\n      lineHeight: viewConstants.buttonTextLineHeight,\n      fontWeight: 'bold',\n      color: colors.fourth\n    },\n    continueButton: {\n      width: \"35%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: 100,\n      borderTopWidth: 1,\n      height: 40,\n      marginBottom: 20,\n      shadowColor: 'grey',\n      shadowRadius: 10,\n      marginTop: '10%',\n      alignSelf: 'center'\n    },\n    backbutton: {\n      height: 60,\n      alignSelf: 'flex-start',\n      width: 60,\n      backgroundColor: colors.secondary,\n      marginBottom: '15%',\n      borderRadius: 40\n    },\n    inputbar: _objectSpread({\n      flex: 1,\n      justifyContent: 'center'\n    }, Platform.select({\n      web: {\n        marginLeft: '30%',\n        marginRight: '30%'\n      },\n      default: {\n        marginLeft: '5%',\n        marginRight: '5%'\n      }\n    })),\n    passwordAndEye: {\n      flexDirection: 'row'\n    },\n    eye: {\n      position: 'absolute',\n      right: 25,\n      top: 2\n    }\n  });\n  return React.createElement(View, {\n    style: styles.screenBackground\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    },\n    style: styles.backbutton\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: '10%',\n      marginTop: '15%',\n      width: 40,\n      height: 40,\n      tintColor: colors.primary\n    },\n    source: require(\"../assets/images/back.png\")\n  })), React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Text, {\n    style: styles.headerTitle\n  }, \"Login\"), React.createElement(Text, {\n    style: styles.headerText\n  }, \"Welcome back. Enter your details to start Taggin' again.\"), React.createElement(Text, {\n    style: styles.linkText,\n    onPress: function onPress() {\n      return navigation.navigate(\"Signup\");\n    }\n  }, \"Don't have an account?\")), React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Username:\"), React.createElement(TextInput, {\n    style: styles.inputText,\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    defaultValue: username,\n    enablesReturnKeyAutomatically: true,\n    textContentType: \"username\",\n    autoCompleteType: \"username\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"next\",\n    placeholder: \"Enter Your Username\"\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Password:\"), React.createElement(View, {\n    style: styles.passwordAndEye\n  }, React.createElement(TextInput, {\n    enablesReturnKeyAutomatically: true,\n    secureTextEntry: !viewPassword,\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    textContentType: \"newPassword\",\n    autoCompleteType: \"password\",\n    style: styles.inputText,\n    placeholder: \"Enter your Password\",\n    autoCapitalize: \"none\"\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setViewPassword(!viewPassword);\n    }\n  }, React.createElement(Icon, {\n    style: styles.eye,\n    name: viewPassword ? \"eye\" : \"eye-off\",\n    size: 30\n  })))), React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        backgroundColor: pressed ? colors.third : colors.secondary\n      }, styles.continueButton];\n    },\n    onPress: function onPress() {\n      setLoading(true);\n      handleContinuePress();\n    }\n  }, React.createElement(Text, {\n    style: [{\n      display: loading ? 'none' : 'flex'\n    }, styles.buttonText]\n  }, \"Login\"), React.createElement(ActivityIndicator, {\n    style: {\n      display: loading ? 'flex' : 'none'\n    }\n  })));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/Abhi/Developer/hashtaggin/ReactNative-taggin/Screens/LoginScreen.js"],"names":["React","useState","useContext","createStackNavigator","TouchableWithoutFeedback","colors","axios","Icon","AsyncStorage","LoginScreen","navigation","myLoginDetailsStorageKey","username","setUsername","password","setPassword","viewPassword","setViewPassword","loading","setLoading","saveMyLoginInfo","myUserInfo","setItem","console","log","Alert","alert","handleContinuePress","Platform","OS","text","post","then","res","data","status","message","navigate","error","viewConstants","containerTopMargin","containerBottomMargin","containerHorizontalMargins","headingFontSize","headingWeight","headingFontSizeLandscape","headerBottomMargin","textSize","textSizeLandscape","headerTextLandscapePadding","labelPadding","textBoxBorderWidth","textBoxBorderRadius","textBoxPadding","formHorizontalMargin","formBottomMarginLandscape","buttonTextLineHeight","buttonTextLineHeightLandscape","buttonHeight","buttonHeightLandscape","styles","StyleSheet","create","screenBackground","flex","backgroundColor","primary","padding","paddingTop","container","marginHorizontal","justifyContent","header","marginBottom","flexDirection","width","headerTitle","fontWeight","fontSize","color","third","paddingVertical","headerText","linkText","textDecorationLine","signUpForm","details","label","inputText","borderWidth","borderColor","fourth","borderRadius","textAlign","shadowColor","shadowOffset","height","shadowOpacity","buttonText","lineHeight","continueButton","alignItems","borderTopWidth","shadowRadius","marginTop","alignSelf","backbutton","secondary","inputbar","select","web","marginLeft","marginRight","default","passwordAndEye","eye","position","right","top","tintColor","require","pressed","display"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;;;;;;;;;;;;;AAEA,SAASC,wBAAT,QAAyC,8BAAzC;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAElC,MAAMC,wBAAwB,GAAG,WAAjC;;AACA,kBAAgCV,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOW,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCZ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOa,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAwCd,QAAQ,CAAC,KAAD,CAAhD;AAAA;AAAA,MAAOe,YAAP;AAAA,MAAqBC,eAArB;;AACA,mBAA8BhB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEZb,YAAY,CAACc,OAAb,CAAqB,KAArB,EAA4BD,UAA5B,CAFY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIhBE,YAAAA,OAAO,CAACC,GAAR;AACAC,YAAAA,KAAK,CAACC,KAAN,CACI,0BADJ;;AALgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAUA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BR,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAIP,QAAQ,KAAK,EAAb,IAAmBE,QAAQ,KAAG,EAAlC,EAAsC;AAClCK,MAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,UAAIS,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA0B;AACtBH,QAAAA,KAAK,CAAC,wCAAD,CAAL;AACH,OAFD,MAEM;AACFD,QAAAA,KAAK,CAACC,KAAN,CACI,2BADJ,EAEI,wCAFJ,EAGI,CACI;AACII,UAAAA,IAAI,EAAE;AADV,SADJ,CAHJ;AASH;AACJ,KAfD,MAeO;AACHxB,MAAAA,KAAK,CAACyB,IAAN,CAAW,mDAAX,EACA;AAACnB,QAAAA,QAAQ,EAAEA,QAAX;AAAqBE,QAAAA,QAAQ,EAAEA;AAA/B,OADA,EAEEkB,IAFF,CAEO,iBAAgBC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACHd,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AADG,sBAEAc,GAAG,CAACC,IAAJ,CAASC,MAAT,IAAmB,OAFnB;AAAA;AAAA;AAAA;;AAIOd,gBAAAA,UAJP,GAIoBY,GAAG,CAACC,IAAJ,CAASE,OAJ7B;AAAA;AAAA,iDAKOhB,eAAe,CAACC,UAAD,CALtB;;AAAA;AAMCX,gBAAAA,UAAU,CAAC2B,QAAX,CAAoB,MAApB,EAA2B;AAACzB,kBAAAA,QAAQ,EAAEA;AAAX,iBAA3B;AAND;AAAA;;AAAA;AAQCa,gBAAAA,KAAK,CAACC,KAAN,CACIO,GAAG,CAACC,IAAJ,CAASI,KADb;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFP;AAeH;AACJ,GAnCD;;AAoCJ,MAAMC,aAAa,GAAG;AAClBC,IAAAA,kBAAkB,EAAE,KADF;AAElBC,IAAAA,qBAAqB,EAAE,KAFL;AAGlBC,IAAAA,0BAA0B,EAAE,IAHV;AAIlBC,IAAAA,eAAe,EAAE,EAJC;AAKlBC,IAAAA,aAAa,EAAE,KALG;AAMlBC,IAAAA,wBAAwB,EAAE,EANR;AAOlBC,IAAAA,kBAAkB,EAAE,CAPF;AAQlBC,IAAAA,QAAQ,EAAE,EARQ;AASlBC,IAAAA,iBAAiB,EAAE,EATD;AAUlBC,IAAAA,0BAA0B,EAAE,EAVV;AAWlBC,IAAAA,YAAY,EAAE,EAXI;AAYlBC,IAAAA,kBAAkB,EAAE,CAZF;AAalBC,IAAAA,mBAAmB,EAAE,EAbH;AAclBC,IAAAA,cAAc,EAAE,EAdE;AAelBC,IAAAA,oBAAoB,EAAE,EAfJ;AAgBlBC,IAAAA,yBAAyB,EAAE,EAhBT;AAiBlBC,IAAAA,oBAAoB,EAAE,EAjBJ;AAkBlBC,IAAAA,6BAA6B,EAAE,EAlBb;AAmBlBC,IAAAA,YAAY,EAAE,EAnBI;AAoBlBC,IAAAA,qBAAqB,EAAE;AApBL,GAAtB;AAsBA,MAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC7BC,IAAAA,gBAAgB,EAAE;AACdC,MAAAA,IAAI,EAAE,CADQ;AAEdC,MAAAA,eAAe,EAAE5D,MAAM,CAAC6D,OAFV;AAGdC,MAAAA,OAAO,EAAE,EAHK;AAIdC,MAAAA,UAAU,EAAE;AAJE,KADW;AAO7BC,IAAAA,SAAS,EAAE;AACPC,MAAAA,gBAAgB,EAAE/B,aAAa,CAACG,0BADzB;AAEPsB,MAAAA,IAAI,EAAE,CAFC;AAGPO,MAAAA,cAAc,EAAE;AAHT,KAPkB;AAc7BC,IAAAA,MAAM,EAAE;AACJC,MAAAA,YAAY,EAAElC,aAAa,CAACO,kBADxB;AAEJkB,MAAAA,IAAI,EAAG,CAFH;AAGJU,MAAAA,aAAa,EAAE,QAHX;AAIJC,MAAAA,KAAK,EAAE;AAJH,KAdqB;AAoB7BC,IAAAA,WAAW,EAAE;AACTC,MAAAA,UAAU,EAAEtC,aAAa,CAACK,aADjB;AAETkC,MAAAA,QAAQ,EAAEvC,aAAa,CAACI,eAFf;AAGToC,MAAAA,KAAK,EAAE1E,MAAM,CAAC2E,KAHL;AAITC,MAAAA,eAAe,EAAE,IAJR;AAKTb,MAAAA,UAAU,EAAE;AALH,KApBgB;AA2B7Bc,IAAAA,UAAU,EAAE;AACRJ,MAAAA,QAAQ,EAAGvC,aAAa,CAACQ,QADjB;AAERqB,MAAAA,UAAU,EAAG,CAFL;AAGRW,MAAAA,KAAK,EAAE;AAHC,KA3BiB;AAgC7BI,IAAAA,QAAQ,EAAE;AACNC,MAAAA,kBAAkB,EAAE,WADd;AAENH,MAAAA,eAAe,EAAE,IAFX;AAGNF,MAAAA,KAAK,EAAE,UAHD;AAIND,MAAAA,QAAQ,EAAGvC,aAAa,CAACQ;AAJnB,KAhCmB;AAsC7BsC,IAAAA,UAAU,EAAC;AACPrB,MAAAA,IAAI,EAAE,CADC;AAEPe,MAAAA,KAAK,EAAE;AAFA,KAtCkB;AA0C7BO,IAAAA,OAAO,EAAE;AACLZ,MAAAA,aAAa,EAAE,QADV;AAELJ,MAAAA,gBAAgB,EAAE/B,aAAa,CAACe,oBAF3B;AAGLmB,MAAAA,YAAY,EAAE;AAHT,KA1CoB;AA+C7B3D,IAAAA,QAAQ,EAAE;AACN4D,MAAAA,aAAa,EAAE,QADT;AAENJ,MAAAA,gBAAgB,EAAE/B,aAAa,CAACe,oBAF1B;AAGNmB,MAAAA,YAAY,EAAG;AAHT,KA/CmB;AAoD7Bc,IAAAA,KAAK,EAAE;AACHT,MAAAA,QAAQ,EAAEvC,aAAa,CAACQ,QADrB;AAEHoB,MAAAA,OAAO,EAAE5B,aAAa,CAACW,YAFpB;AAGH6B,MAAAA,KAAK,EAAE1E,MAAM,CAAC2E,KAHX;AAIHH,MAAAA,UAAU,EAAE,KAJT;AAKHP,MAAAA,gBAAgB,EAAE;AALf,KApDsB;AA4D7BkB,IAAAA,SAAS,EAAE;AACPC,MAAAA,WAAW,EAAElD,aAAa,CAACY,kBADpB;AAEPuC,MAAAA,WAAW,EAAE,OAFN;AAGPD,MAAAA,WAAW,EAAE,CAHN;AAIPd,MAAAA,KAAK,EAAE,MAJA;AAKPV,MAAAA,eAAe,EAAE5D,MAAM,CAACsF,MALjB;AAMPC,MAAAA,YAAY,EAAErD,aAAa,CAACa,mBANrB;AAOPyC,MAAAA,SAAS,EAAE,QAPJ;AAQPC,MAAAA,WAAW,EAAE,MARN;AASPC,MAAAA,YAAY,EAAE;AAACpB,QAAAA,KAAK,EAAE,CAAR;AAAWqB,QAAAA,MAAM,EAAE;AAAnB,OATP;AAUPC,MAAAA,aAAa,EAAE,GAVR;AAWP9B,MAAAA,OAAO,EAAE5B,aAAa,CAACc,cAXhB;AAYPyB,MAAAA,QAAQ,EAAGvC,aAAa,CAACQ,QAZlB;AAaPuB,MAAAA,gBAAgB,EAAE/B,aAAa,CAACc,cAbzB;AAcP0B,MAAAA,KAAK,EAAE;AAdA,KA5DkB;AA4E7BmB,IAAAA,UAAU,EAAE;AACRpB,MAAAA,QAAQ,EAAEvC,aAAa,CAACQ,QADhB;AAERoD,MAAAA,UAAU,EAAE5D,aAAa,CAACiB,oBAFlB;AAGRqB,MAAAA,UAAU,EAAE,MAHJ;AAIRE,MAAAA,KAAK,EAAE1E,MAAM,CAACsF;AAJN,KA5EiB;AAkF7BS,IAAAA,cAAc,EAAE;AACZzB,MAAAA,KAAK,EAAE,KADK;AAEZJ,MAAAA,cAAc,EAAE,QAFJ;AAGZ8B,MAAAA,UAAU,EAAE,QAHA;AAKZT,MAAAA,YAAY,EAAE,GALF;AAMZU,MAAAA,cAAc,EAAE,CANJ;AAOZN,MAAAA,MAAM,EAAE,EAPI;AAQZvB,MAAAA,YAAY,EAAE,EARF;AASZqB,MAAAA,WAAW,EAAE,MATD;AAUZS,MAAAA,YAAY,EAAE,EAVF;AAWZC,MAAAA,SAAS,EAAE,KAXC;AAYZC,MAAAA,SAAS,EAAE;AAZC,KAlFa;AAgG7BC,IAAAA,UAAU,EAAE;AACRV,MAAAA,MAAM,EAAE,EADA;AAERS,MAAAA,SAAS,EAAE,YAFH;AAGR9B,MAAAA,KAAK,EAAE,EAHC;AAIRV,MAAAA,eAAe,EAAE5D,MAAM,CAACsG,SAJhB;AAKRlC,MAAAA,YAAY,EAAE,KALN;AAMRmB,MAAAA,YAAY,EAAE;AANN,KAhGiB;AAwG7BgB,IAAAA,QAAQ;AACJ5C,MAAAA,IAAI,EAAE,CADF;AAEJO,MAAAA,cAAc,EAAE;AAFZ,OAID3C,QAAQ,CAACiF,MAAT,CAAgB;AACfC,MAAAA,GAAG,EAAE;AACDC,QAAAA,UAAU,EAAE,KADX;AAEDC,QAAAA,WAAW,EAAE;AAFZ,OADU;AAKfC,MAAAA,OAAO,EAAE;AACLF,QAAAA,UAAU,EAAE,IADP;AAELC,QAAAA,WAAW,EAAE;AAFR;AALM,KAAhB,CAJC,CAxGqB;AAuH7BE,IAAAA,cAAc,EAAE;AACZxC,MAAAA,aAAa,EAAE;AADH,KAvHa;AA0H7ByC,IAAAA,GAAG,EAAC;AACAC,MAAAA,QAAQ,EAAE,UADV;AAEAC,MAAAA,KAAK,EAAE,EAFP;AAGAC,MAAAA,GAAG,EAAG;AAHN;AA1HyB,GAAlB,CAAf;AAgII,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE1D,MAAM,CAACG;AAApB,KACK,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAKrD,UAAU,CAAC2B,QAAX,CAAoB,QAApB,CAAL;AAAA,KAA3B;AAA+D,IAAA,KAAK,EAAEuB,MAAM,CAAC8C;AAA7E,KACW,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAAEK,MAAAA,UAAU,EAAC,KAAb;AAAoBP,MAAAA,SAAS,EAAC,KAA9B;AAAqC7B,MAAAA,KAAK,EAAE,EAA5C;AAAgDqB,MAAAA,MAAM,EAAE,EAAxD;AAA4DuB,MAAAA,SAAS,EAAElH,MAAM,CAAC6D;AAA9E,KAAd;AAAsG,IAAA,MAAM,EAAEsD,OAAO;AAArH,IADX,CADL,EAIK,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAI5D,MAAM,CAACY;AAAtB,KACW,oBAAC,IAAD;AACI,IAAA,KAAK,EAAIZ,MAAM,CAACgB;AADpB,aADX,EAKW,oBAAC,IAAD;AACI,IAAA,KAAK,EAAIhB,MAAM,CAACsB;AADpB,gEALX,EASW,oBAAC,IAAD;AACI,IAAA,KAAK,EAAItB,MAAM,CAACuB,QADpB;AAEI,IAAA,OAAO,EAAE;AAAA,aAAMzE,UAAU,CAAC2B,QAAX,CAAoB,QAApB,CAAN;AAAA;AAFb,8BATX,CAJL,EAmBK,oBAAC,IAAD,QACO,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEuB,MAAM,CAAC2B;AADlB,iBADP,EAKO,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE3B,MAAM,CAAC4B,SADlB;AAEI,IAAA,YAAY,EAAK,sBAAA5E,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAF7B;AAGI,IAAA,YAAY,EAAIA,QAHpB;AAII,IAAA,6BAA6B,EAAI,IAJrC;AAKI,IAAA,eAAe,EAAG,UALtB;AAMI,IAAA,gBAAgB,EAAG,UANvB;AAOI,IAAA,cAAc,EAAC,MAPnB;AAQI,IAAA,aAAa,EAAC,MARlB;AASI,IAAA,WAAW,EAAC;AAThB,IALP,CAnBL,EAmCI,oBAAC,IAAD,QACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEgD,MAAM,CAAC2B;AADlB,iBADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAG3B,MAAM,CAACsD;AAArB,KACA,oBAAC,SAAD;AACI,IAAA,6BAA6B,EAAI,IADrC;AAEI,IAAA,eAAe,EAAG,CAAClG,YAFvB;AAGI,IAAA,aAAa,EAAC,MAHlB;AAII,IAAA,YAAY,EAAK,sBAAAF,QAAQ;AAAA,aAAIC,WAAW,CAACD,QAAD,CAAf;AAAA,KAJ7B;AAKI,IAAA,YAAY,EAAIA,QALpB;AAMI,IAAA,eAAe,EAAG,aANtB;AAOI,IAAA,gBAAgB,EAAC,UAPrB;AAQI,IAAA,KAAK,EAAE8C,MAAM,CAAC4B,SARlB;AASI,IAAA,WAAW,EAAC,qBAThB;AAUI,IAAA,cAAc,EAAC;AAVnB,IADA,EAYA,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAKvE,eAAe,CAAC,CAACD,YAAF,CAApB;AAAA;AAA3B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE4C,MAAM,CAACuD,GAApB;AAAyB,IAAA,IAAI,EAAInG,YAAY,GAAG,KAAH,GAAW,SAAxD;AAAmE,IAAA,IAAI,EAAE;AAAzE,IADJ,CAZA,CALJ,CAnCJ,EAyDI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAA,UAAEyG,OAAF,SAAEA,OAAF;AAAA,aAAe,CAAC;AACtBxD,QAAAA,eAAe,EAAEwD,OAAO,GAAGpH,MAAM,CAAC2E,KAAV,GAAkB3E,MAAM,CAACsG;AAD3B,OAAD,EAErB/C,MAAM,CAACwC,cAFc,CAAf;AAAA,KAAlB;AAGY,IAAA,OAAO,EAAE,mBAAM;AAAEjF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAAkBQ,MAAAA,mBAAmB;AAAG;AAHrE,KAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC;AAAC+F,MAAAA,OAAO,EAAExG,OAAO,GAAE,MAAF,GAAW;AAA5B,KAAD,EAAqC0C,MAAM,CAACsC,UAA5C;AAAb,aAJJ,EAKI,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAE;AAACwB,MAAAA,OAAO,EAAExG,OAAO,GAAE,MAAF,GAAS;AAA1B;AAA1B,IALJ,CAzDJ,CADJ;AAmEH,CA/QD;;AAiRA,eAAeT,WAAf","sourcesContent":["import React, {useState,useContext} from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Alert, SafeAreaView, Pressable, Keyboard, StyleSheet, Text, TextInput, View, Platform, TouchableOpacity, Image, ActivityIndicator } from 'react-native';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport colors from '../assets/colors';\nimport axios from 'axios';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nconst LoginScreen = ({navigation}) => {\n    \n    const myLoginDetailsStorageKey = \"loginCred\";\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [viewPassword, setViewPassword] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const saveMyLoginInfo = async (myUserInfo) => {\n        try {\n          await AsyncStorage.setItem(\"rat\", myUserInfo)\n        } catch (e) {\n            console.log(e)\n            Alert.alert(\n                \"Couldn't Save Login Info\"\n              )\n        }\n      }\n    const handleContinuePress = () => {\n        setLoading(true);\n        //checking for empty fields\n        if (username === \"\" || password===\"\") {\n            setLoading(false);\n            if (Platform.OS === 'web'){\n                alert(\"Kindly fill all the fields to continue\")\n            }else {\n                Alert.alert(\n                    \"All fields are compulsory\",\n                    \"Kindly fill all the fields to continue\",\n                    [\n                        {\n                            text: \"Go Back\",\n                        }\n                    ]\n                )\n            }\n        } else {\n            axios.post(\"https://fierce-mountain-79115.herokuapp.com/login\", \n            {username: username, password: password}\n            ).then(async function (res) {\n                setLoading(false);\n                if(res.data.status != 'error'){\n                    //put the token in local storage\n                    const myUserInfo = res.data.message;\n                    await saveMyLoginInfo(myUserInfo);\n                    navigation.navigate(\"Root\",{username: username});\n                }else {\n                    Alert.alert(\n                        res.data.error\n                    )\n                }\n            })\n        }\n    }\nconst viewConstants = {\n    containerTopMargin: '10%',\n    containerBottomMargin: '16%',\n    containerHorizontalMargins: '7%',\n    headingFontSize: 34,\n    headingWeight: '800',\n    headingFontSizeLandscape: 34,\n    headerBottomMargin: 5,\n    textSize: 15,\n    textSizeLandscape: 18,\n    headerTextLandscapePadding: 80,\n    labelPadding: 10,\n    textBoxBorderWidth: 2,\n    textBoxBorderRadius: 13,\n    textBoxPadding: 10,\n    formHorizontalMargin: 40,\n    formBottomMarginLandscape: 30,\n    buttonTextLineHeight: 21,\n    buttonTextLineHeightLandscape: 21,\n    buttonHeight: 70,\n    buttonHeightLandscape: 45,\n}\nconst styles = StyleSheet.create({\n    screenBackground: {\n        flex: 1,\n        backgroundColor: colors.primary,\n        padding: 30,\n        paddingTop: '30%'\n    },\n    container: {\n        marginHorizontal: viewConstants.containerHorizontalMargins,\n        flex: 1,\n        justifyContent: 'center',\n       \n        //implementing different code for differnet orientations\n    },\n    header: {\n        marginBottom: viewConstants.headerBottomMargin,\n        flex:  0,\n        flexDirection: 'column',\n        width: '100%',\n    },\n    headerTitle: {\n        fontWeight: viewConstants.headingWeight,\n        fontSize: viewConstants.headingFontSize,\n        color: colors.third,\n        paddingVertical: '3%',\n        paddingTop: 0,\n    },\n    headerText: {\n        fontSize:  viewConstants.textSize,\n        paddingTop:  0,\n        color: '#200111',\n    },\n    linkText: {\n        textDecorationLine: 'underline',\n        paddingVertical: '3%',\n        color: 'darkblue',\n        fontSize:  viewConstants.textSize,\n    },  \n    signUpForm:{\n        flex: 1,\n        color: 'black',\n    },\n    details: {\n        flexDirection: 'column',\n        marginHorizontal: viewConstants.formHorizontalMargin,\n        marginBottom: 0\n    },\n    password: {\n        flexDirection: 'column',\n        marginHorizontal: viewConstants.formHorizontalMargin,\n        marginBottom:  0\n    },\n    label: {\n        fontSize: viewConstants.textSize,\n        padding: viewConstants.labelPadding,\n        color: colors.third,\n        fontWeight: '500',\n        marginHorizontal: 0,\n        \n    },\n    inputText: {\n        borderWidth: viewConstants.textBoxBorderWidth,\n        borderColor: 'white',\n        borderWidth: 1,\n        width: \"100%\",\n        backgroundColor: colors.fourth,\n        borderRadius: viewConstants.textBoxBorderRadius,\n        textAlign: 'center',\n        shadowColor: 'grey',\n        shadowOffset: {width: 2, height: 3},\n        shadowOpacity: 0.3,\n        padding: viewConstants.textBoxPadding,\n        fontSize:  viewConstants.textSize,\n        marginHorizontal: viewConstants.textBoxPadding,\n        color: 'black',\n    },\n    buttonText: {\n        fontSize: viewConstants.textSize,\n        lineHeight: viewConstants.buttonTextLineHeight,\n        fontWeight: 'bold',\n        color: colors.fourth,\n    },\n    continueButton: {\n        width: \"35%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n       \n        borderRadius: 100,\n        borderTopWidth: 1,\n        height: 40,\n        marginBottom: 20,\n        shadowColor: 'grey',\n        shadowRadius: 10, \n        marginTop: '10%',\n        alignSelf: 'center'\n    }, \n    backbutton: {\n        height: 60,\n        alignSelf: 'flex-start',\n        width: 60,\n        backgroundColor: colors.secondary,\n        marginBottom: '15%',\n        borderRadius: 40,\n    },\n    inputbar: {\n        flex: 1,\n        justifyContent: 'center',\n        \n        ...Platform.select({\n            web: {\n                marginLeft: '30%',\n                marginRight: '30%',\n            },\n            default: {\n                marginLeft: '5%',\n                marginRight: '5%',\n            },\n        }),\n    },\n    passwordAndEye: {\n        flexDirection: 'row',\n    },\n    eye:{\n        position: 'absolute',\n        right: 25,\n        top : 2\n    }\n})\n    return ( \n        <View style={styles.screenBackground}>\n             <TouchableOpacity onPress={()=> navigation.navigate(\"Signup\")} style={styles.backbutton}>\n                        <Image style={{ marginLeft:'10%', marginTop:'15%', width: 40, height: 40, tintColor: colors.primary}} source={require(\"../assets/images/back.png\")}/>\n            </TouchableOpacity>\n             <View style = {styles.header}>\n                        <Text \n                            style = {styles.headerTitle}>\n                            Login\n                        </Text>\n                        <Text \n                            style = {styles.headerText} >\n                            Welcome back. Enter your details to start Taggin' again.\n                        </Text>\n                        <Text \n                            style = {styles.linkText} \n                            onPress={() => navigation.navigate(\"Signup\")} >\n                            Don't have an account?\n                        </Text>\n                    </View>\n             <View>\n                    <Text \n                        style={styles.label}>\n                        Username: \n                    </Text>\n                    <TextInput\n                        style={styles.inputText} \n                        onChangeText = { username => setUsername(username) }\n                        defaultValue = {username}\n                        enablesReturnKeyAutomatically = {true}\n                        textContentType = 'username'  // Only for iOS\n                        autoCompleteType = 'username'         // Only for Android\n                        autoCapitalize='none'           // Works on all platforms\n                        returnKeyType=\"next\"\n                        placeholder=\"Enter Your Username\" />\n                </View>\n            <View>\n                <Text \n                    style={styles.label}>\n                    Password: \n                </Text>\n                <View style ={styles.passwordAndEye}>\n                <TextInput \n                    enablesReturnKeyAutomatically = {true}\n                    secureTextEntry={ !viewPassword} \n                    returnKeyType='done'\n                    onChangeText = { password => setPassword(password) }\n                    defaultValue = {password}\n                    textContentType = \"newPassword\" \n                    autoCompleteType='password' \n                    style={styles.inputText} \n                    placeholder=\"Enter your Password\" \n                    autoCapitalize='none'/>\n                <TouchableOpacity onPress={()=> setViewPassword(!viewPassword)}> \n                    <Icon style={styles.eye} name= { viewPassword ? \"eye\" : \"eye-off\"} size={30}/>\n                </TouchableOpacity>\n                 </View>\n            </View>\n            <Pressable style={({pressed}) => [{\n                        backgroundColor: pressed ? colors.third : colors.secondary,},\n                        styles.continueButton,]}\n                        onPress={() => { setLoading(true); handleContinuePress()}}>\n                <Text style={[{display: loading? 'none' : 'flex'},styles.buttonText]}>Login</Text>\n                <ActivityIndicator style={{display: loading? 'flex':'none'}} />\n            </Pressable>\n        </View>\n     );\n}\n \nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}