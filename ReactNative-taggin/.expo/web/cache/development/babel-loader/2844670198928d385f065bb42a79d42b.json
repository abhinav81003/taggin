{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TextInputComponent } from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Picker } from '@react-native-picker/picker';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from \"../assets/colors\";\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport { useDeviceOrientation, useDimensions } from '@react-native-community/hooks';\nimport MapView from 'react-native-maps';\nimport { Marker, Callout, Circle, CalloutSubview } from 'react-native-maps';\nimport axios from 'axios';\nimport * as Location from 'expo-location';\nvar mapStyles = [{\n  \"featureType\": \"road\",\n  \"stylers\": [{\n    \"hue\": \"#5e00ff\"\n  }, {\n    \"saturation\": -79\n  }]\n}, {\n  \"featureType\": \"poi\",\n  \"stylers\": [{\n    \"saturation\": -78\n  }, {\n    \"hue\": \"#6600ff\"\n  }, {\n    \"lightness\": -47\n  }, {\n    \"visibility\": \"off\"\n  }]\n}, {\n  \"featureType\": \"road.local\",\n  \"stylers\": [{\n    \"lightness\": 22\n  }]\n}, {\n  \"featureType\": \"landscape\",\n  \"stylers\": [{\n    \"hue\": \"#eddded\"\n  }, {\n    \"saturation\": -11\n  }]\n}, {}, {}, {\n  \"featureType\": \"water\",\n  \"stylers\": [{\n    \"saturation\": -65\n  }, {\n    \"hue\": \"#1900ff\"\n  }, {\n    \"lightness\": 8\n  }]\n}, {\n  \"featureType\": \"road.local\",\n  \"stylers\": [{\n    \"weight\": 1.3\n  }, {\n    \"lightness\": 30\n  }]\n}, {\n  \"featureType\": \"transit\",\n  \"stylers\": [{\n    \"visibility\": \"simplified\"\n  }, {\n    \"hue\": \"#5e00ff\"\n  }, {\n    \"saturation\": -16\n  }]\n}, {\n  \"featureType\": \"transit.line\",\n  \"stylers\": [{\n    \"saturation\": -72\n  }]\n}, {}];\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nvar Home = function Home(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var _useDimensions$window = useDimensions().window,\n      width = _useDimensions$window.width,\n      height = _useDimensions$window.height;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var styles = StyleSheet.create({\n    map: {\n      width: width,\n      height: height\n    },\n    thought: {\n      borderRadius: 10,\n      minHeight: 300,\n      minWidth: 300,\n      padding: 20,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    refreshButton: {\n      position: 'absolute',\n      bottom: 60,\n      right: 30,\n      height: 42,\n      width: 42,\n      backgroundColor: \"white\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 50\n    },\n    Icon: {\n      width: 26,\n      height: 26\n    },\n    uploadButton: {\n      position: 'absolute',\n      bottom: 120,\n      right: 30,\n      height: 42,\n      width: 42,\n      backgroundColor: \"white\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 50\n    },\n    profileButton: {\n      position: 'absolute',\n      top: 60,\n      right: 30,\n      height: 42,\n      width: 42,\n      backgroundColor: \"white\",\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 50\n    }\n  });\n  var username = route.params.username;\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      location = _useState4[0],\n      setLocation = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMsg = _useState6[0],\n      setErrorMsg = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg('Permission to access location was denied');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = \"Waiting\";\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      ignored = _useReducer2[0],\n      forceUpdate = _useReducer2[1];\n\n  var _useState7 = useState([{}]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      posts = _useState8[0],\n      setPosts = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      thoughts = _useState10[0],\n      setThoughts = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      refreshing = _useState12[0],\n      setRefreshing = _useState12[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  useEffect(function () {\n    setRefreshing(true);\n    axios.get('https://fierce-mountain-79115.herokuapp.com/posts').then(function (response) {\n      console.log(response.data);\n      setThoughts(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n  useEffect(function () {\n    axios.get('https://fierce-mountain-79115.herokuapp.com/posts').then(function (response) {\n      console.log(response.data);\n      setThoughts(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  var handleRefresh = function handleRefresh() {\n    axios.get('https://fierce-mountain-79115.herokuapp.com/posts').then(function (response) {\n      console.log(response.data);\n      setThoughts(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n    onRefresh();\n  };\n\n  var handleUpload = function handleUpload() {\n    navigation.navigate(\"Upload\", {\n      loc: location,\n      username: username\n    });\n  };\n\n  var handleProfilePress = function handleProfilePress() {\n    navigation.navigate(\"Profile\", {\n      username: username\n    });\n  };\n\n  return React.createElement(View, null, React.createElement(MapView, {\n    style: styles.map,\n    region: {\n      longitude: location != null ? location.coords.longitude : 0,\n      latitude: location != null ? location.coords.latitude : 0,\n      longitudeDelta: 0.002,\n      latitudeDelta: 0.002\n    },\n    provider: MapView.PROVIDER_GOOGLE,\n    customMapStyle: mapStyles\n  }, thoughts.map(function (thought, index) {\n    return React.createElement(View, {\n      key: index\n    }, React.createElement(Marker, {\n      coordinate: {\n        latitude: parseFloat(thought.latitude),\n        longitude: parseFloat(thought.longitude)\n      }\n    }, React.createElement(Callout, {\n      onPress: function onPress() {\n        setLiked(!liked);\n        forceUpdate();\n      }\n    }, React.createElement(View, {\n      style: [styles.thought, {\n        backgroundColor: liked ? 'red' : 'white'\n      }]\n    }, React.createElement(Text, null, thought.userID), React.createElement(Text, null, thought.title + \" \" + thought.description), React.createElement(Text, null, \"Posted at: \" + thought.date + \" \" + thought.time), React.createElement(Text, null, \"Likes \" + thought.likes), React.createElement(TouchableOpacity, null)))), React.createElement(Circle, {\n      center: {\n        latitude: parseFloat(thought.latitude),\n        longitude: parseFloat(thought.longitude)\n      },\n      radius: parseInt(thought.radius)\n    }));\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleRefresh();\n    },\n    style: styles.refreshButton\n  }, React.createElement(Image, {\n    style: styles.Icon,\n    source: require(\"../assets/refresh.png\")\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleUpload();\n    },\n    style: styles.uploadButton\n  }, React.createElement(Image, {\n    style: styles.Icon,\n    source: require(\"../assets/thought.png\")\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return handleProfilePress();\n    },\n    style: styles.profileButton\n  }, React.createElement(Image, {\n    style: styles.Icon,\n    source: require(\"../assets/profile.png\")\n  })));\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/Abhi/Developer/hashtaggin/ReactNative-taggin/Screens/HomeScreen.js"],"names":["React","useState","useEffect","useReducer","TextInputComponent","Picker","createStackNavigator","createBottomTabNavigator","MaterialCommunityIcons","colors","Colors","useDeviceOrientation","useDimensions","MapView","Marker","Callout","Circle","CalloutSubview","axios","Location","mapStyles","wait","timeout","Promise","resolve","setTimeout","Home","navigation","route","window","width","height","liked","setLiked","styles","StyleSheet","create","map","thought","borderRadius","minHeight","minWidth","padding","justifyContent","alignItems","refreshButton","position","bottom","right","backgroundColor","Icon","uploadButton","profileButton","top","username","params","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","text","JSON","stringify","x","ignored","forceUpdate","posts","setPosts","thoughts","setThoughts","refreshing","setRefreshing","onRefresh","useCallback","then","get","response","console","log","data","catch","error","handleRefresh","handleUpload","navigate","loc","handleProfilePress","longitude","coords","latitude","longitudeDelta","latitudeDelta","PROVIDER_GOOGLE","index","parseFloat","userID","title","description","date","time","likes","parseInt","radius","require"],"mappings":"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","sourcesContent":["import React, {useState, useEffect,useReducer} from 'react';\nimport { Button,Platform, SafeAreaView, StyleSheet, TextInput, TextInputComponent,ScrollView, TouchableOpacity, View, Text, Image, Pressable } from 'react-native';\nimport {Picker} from '@react-native-picker/picker';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport colors from '../assets/colors';\nimport { Colors } from 'react-native/Libraries/NewAppScreen';\nimport { useDeviceOrientation, useDimensions } from '@react-native-community/hooks';\nimport MapView from 'react-native-maps';\nimport { Marker, Callout, Circle, CalloutSubview} from 'react-native-maps';\nimport axios from 'axios';\nimport * as Location from 'expo-location';  \n\nvar mapStyles = [\n    {\n        \"featureType\": \"road\",\n        \"stylers\": [\n            {\n                \"hue\": \"#5e00ff\"\n            },\n            {\n                \"saturation\": -79\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"saturation\": -78\n            },\n            {\n                \"hue\": \"#6600ff\"\n            },\n            {\n                \"lightness\": -47\n            },\n            {\n                \"visibility\": \"off\"\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"stylers\": [\n            {\n                \"lightness\": 22\n            }\n        ]\n    },\n    {\n        \"featureType\": \"landscape\",\n        \"stylers\": [\n            {\n                \"hue\": \"#eddded\"\n            },\n            {\n                \"saturation\": -11\n            }\n        ]\n    },\n    {},\n    {},\n    {\n        \"featureType\": \"water\",\n        \"stylers\": [\n            {\n                \"saturation\": -65\n            },\n            {\n                \"hue\": \"#1900ff\"\n            },\n            {\n                \"lightness\": 8\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"stylers\": [\n            {\n                \"weight\": 1.3\n            },\n            {\n                \"lightness\": 30\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit\",\n        \"stylers\": [\n            {\n                \"visibility\": \"simplified\"\n            },\n            {\n                \"hue\": \"#5e00ff\"\n            },\n            {\n                \"saturation\": -16\n            }\n        ]\n    },\n    {\n        \"featureType\": \"transit.line\",\n        \"stylers\": [\n            {\n                \"saturation\": -72\n            }\n        ]\n    },\n    {}\n]\n\nconst wait = (timeout) => {\n    return new Promise(resolve => setTimeout(resolve, timeout));\n}\n\nconst Home = ({navigation, route}) => {\n    const {width, height} = useDimensions().window;\n    const [liked,setLiked] = useState(false);\n    const styles = StyleSheet.create({\n        map: {\n            width: width,\n            height: height,\n        },\n        thought: {\n            borderRadius: 10,\n            minHeight: 300,\n            minWidth: 300,\n            padding: 20,\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        refreshButton: {\n            position: 'absolute',\n            bottom: 60,\n            right:30,\n            height: 42,\n            width: 42,\n            backgroundColor: \"white\",\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 50\n        },\n        Icon: {\n            width: 26,\n            height: 26\n        },\n        uploadButton: {\n            position: 'absolute',\n            bottom: 120,\n            right:30,\n            height: 42,\n            width: 42,\n            backgroundColor: \"white\",\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 50\n        },\n        profileButton: {\n            position: 'absolute',\n            top: 60,\n            right: 30,\n            height: 42,\n            width: 42,\n            backgroundColor: \"white\",\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 50\n        }\n    })\n    //location getting\n    const username = route.params.username;\n    const [location, setLocation] = useState(null);\n    const [errorMsg, setErrorMsg] = useState(null);\n    useEffect(() => {\n        (async () => {\n          let { status } = await Location.requestForegroundPermissionsAsync();\n          if (status !== 'granted') {\n            setErrorMsg('Permission to access location was denied');\n            return;\n          }\n          let location = await Location.getCurrentPositionAsync({});\n          setLocation(location);\n        })();\n      }, []);\n    var text = \"Waiting\"\n      if (errorMsg) {\n        text = errorMsg;\n      } else if (location) {\n        text = JSON.stringify(location);\n      }\n    //force updating the page\n\n    const [ignored, forceUpdate] = useReducer(x => x + 1, 0);\n    //post stuff\n    const [posts,setPosts] = useState([{}]);\n    //let thoughts = [ { \"title\": \"Village dining sucks\", \"description\": \"#usc\", \"latitude\": \"34.02007\", \"longitude\": \"-118.2878\" , \"liked\": \"0\", \"radius\": \"100\"}, { \"title\": \"Parkside is the best\", \"description\": \"#parkside\", \"latitude\":  \"34.02569\", \"longitude\": \"-118.2848\", \"liked\": \"0\", \"radius\": \"200\"},{ \"title\": \"Just gave my midterm, suffice to say, I'm failing this shit \", \"description\": \"#CS\", \"latitude\":  \"34.02059\", \"longitude\": \"-118.2950\",\"liked\": \"0\", \"radius\": \"1000\"} ];\n    \n    //refreshing the page\n    const [thoughts,setThoughts] = useState([])\n    const [refreshing, setRefreshing] = useState(false);\n    const onRefresh = React.useCallback(() => {\n      setRefreshing(true);\n      wait(2000).then(() => setRefreshing(false));\n    }, []);\n\n    useEffect(() => {\n      setRefreshing(true);\n      axios.get('https://fierce-mountain-79115.herokuapp.com/posts')\n        .then(function(response){\n            console.log(response.data);\n            setThoughts(response.data);\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        }) ;\n      wait(2000).then(() => setRefreshing(false));\n      }, []);\n    \n    useEffect(() => {\n        axios.get('https://fierce-mountain-79115.herokuapp.com/posts')\n        .then(function(response){\n            console.log(response.data);\n            setThoughts(response.data);\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n    },[])\n    const handleRefresh = () => {\n        axios.get('https://fierce-mountain-79115.herokuapp.com/posts')\n        .then(function(response){\n            console.log(response.data);\n            setThoughts(response.data);\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        });\n        onRefresh();\n    }\n    const handleUpload = () => {\n        navigation.navigate(\"Upload\",{loc:location, username: username});\n    }\n    const handleProfilePress = () => {\n        navigation.navigate(\"Profile\", {username: username});\n    }\n   \n    return ( \n    \n        <View>\n             <MapView style={styles.map} region={{longitude: location != null ? location.coords.longitude: 0,\n                        latitude: location != null ? location.coords.latitude: 0,\n                        longitudeDelta: 0.002,\n                        latitudeDelta: 0.002}} \n                        provider={MapView.PROVIDER_GOOGLE}\n                        customMapStyle={mapStyles}>\n           \n            {thoughts.map((thought,index) => {\n            return(\n            <View key={index}>\n            <Marker \n                coordinate={{latitude: parseFloat(thought.latitude),\n                longitude: parseFloat(thought.longitude)}}>\n                <Callout  onPress={()=> { setLiked(!liked); forceUpdate();}} >\n                    <View style={[styles.thought,{backgroundColor: liked? 'red': 'white'}]}>\n                        <Text>\n                            {thought.userID}\n                        </Text>\n                        <Text>\n                            {thought.title + \" \" + thought.description}\n                        </Text>\n                        <Text>\n                            {\"Posted at: \" + thought.date + \" \" + thought.time}\n                        </Text>\n                        <Text>\n                            {\"Likes \" + thought.likes}\n                        </Text>\n                        {/* <Button onPress={() => console.log(\"like1\")} title ={\"Like\"}/>  */}\n                        <TouchableOpacity>\n\n                        </TouchableOpacity>\n                    </View>\n                </Callout>\n            </Marker>\n            <Circle \n                    center={{latitude: parseFloat(thought.latitude),\n                    longitude: parseFloat(thought.longitude)}}\n                    radius = {parseInt(thought.radius) }\n                />\n            </View>\n            );})}\n            </MapView>\n            <TouchableOpacity onPress={()=> handleRefresh()} style ={styles.refreshButton}>\n                        <Image style={styles.Icon} source={require('../assets/refresh.png')}/>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={()=> handleUpload()} style ={styles.uploadButton}>\n                        <Image style={styles.Icon} source={require('../assets/thought.png')}/>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={()=> handleProfilePress()} style ={styles.profileButton}>\n                        <Image style={styles.Icon} source={require('../assets/profile.png')}/>\n            </TouchableOpacity>\n        </View>\n     );\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}