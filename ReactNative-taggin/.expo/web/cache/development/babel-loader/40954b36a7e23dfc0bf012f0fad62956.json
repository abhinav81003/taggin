{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport colors from \"../assets/colors\";\nimport axios from 'axios';\n\nvar SignupScreen2 = function SignupScreen2(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      username = _useState6[0],\n      setUSername = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      confirmPassword = _useState10[0],\n      setConfirmPassword = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      loading = _useState12[0],\n      setLoading = _useState12[1];\n\n  var handleContinuePress = function handleContinuePress() {\n    setLoading(true);\n\n    if (email === \"\" || username === \"\" || password === \"\" || confirmPassword === \"\") {\n      if (Platform.OS === 'web') {\n        alert(\"Kindly fill all the fields to continue\");\n      } else {\n        Alert.alert(\"All fields are compulsory\", \"Kindly fill all the fields to continue\", [{\n          text: \"Go Back\"\n        }]);\n      }\n\n      setLoading(false);\n    } else if (confirmPassword != password) {\n      if (Platform.OS === 'web') {\n        alert(\"Passwords Don't Match\");\n      } else {\n        Alert.alert(\"Passwords Don't Match\", \"Kindly ensure that your passwords match\", [{\n          text: \"Edit Password\"\n        }]);\n      }\n\n      setLoading(false);\n    } else {\n      axios.post(\"https://fierce-mountain-79115.herokuapp.com/register\", {\n        email: email,\n        password: password,\n        userID: username,\n        name: name,\n        interests: []\n      }).then(function (res) {\n        if (res.data.status != 'error') {\n          navigation.navigate(\"Interests\");\n          setLoading(false);\n        } else {\n          Alert.alert(res.data.error);\n          setLoading(false);\n        }\n      });\n    }\n  };\n\n  var viewConstants = {\n    containerTopMargin: '10%',\n    containerBottomMargin: '16%',\n    containerHorizontalMargins: '7%',\n    headingFontSize: 34,\n    headingWeight: '800',\n    headingFontSizeLandscape: 34,\n    headerBottomMargin: 5,\n    textSize: 15,\n    textSizeLandscape: 18,\n    headerTextLandscapePadding: 80,\n    labelPadding: 10,\n    textBoxBorderWidth: 2,\n    textBoxBorderRadius: 13,\n    textBoxPadding: 10,\n    formHorizontalMargin: 40,\n    formBottomMarginLandscape: 30,\n    buttonTextLineHeight: 21,\n    buttonTextLineHeightLandscape: 21,\n    buttonHeight: 70,\n    buttonHeightLandscape: 45\n  };\n  var styles = StyleSheet.create({\n    screenBackground: {\n      flex: 1,\n      backgroundColor: colors.primary\n    },\n    container: {\n      marginHorizontal: viewConstants.containerHorizontalMargins,\n      flex: 1,\n      justifyContent: 'center'\n    },\n    header: {\n      marginBottom: viewConstants.headerBottomMargin,\n      flex: 0,\n      flexDirection: 'column',\n      width: '100%'\n    },\n    headerTitle: {\n      fontWeight: viewConstants.headingWeight,\n      fontSize: viewConstants.headingFontSize,\n      color: colors.third,\n      paddingVertical: '3%',\n      paddingTop: 0\n    },\n    headerText: {\n      fontSize: viewConstants.textSize,\n      paddingTop: 0,\n      color: '#200111'\n    },\n    linkText: {\n      textDecorationLine: 'underline',\n      paddingVertical: '3%',\n      color: 'darkblue',\n      fontSize: viewConstants.textSize\n    },\n    signUpForm: {\n      flex: 1,\n      color: 'black'\n    },\n    details: {\n      flexDirection: 'column',\n      marginHorizontal: viewConstants.formHorizontalMargin,\n      marginBottom: 0\n    },\n    password: {\n      flexDirection: 'column',\n      marginHorizontal: viewConstants.formHorizontalMargin,\n      marginBottom: 0\n    },\n    label: {\n      fontSize: viewConstants.textSize,\n      padding: viewConstants.labelPadding,\n      color: colors.third,\n      fontWeight: '500',\n      marginHorizontal: 0\n    },\n    inputText: {\n      borderWidth: viewConstants.textBoxBorderWidth,\n      borderColor: 'white',\n      borderWidth: 1,\n      backgroundColor: colors.fourth,\n      borderRadius: viewConstants.textBoxBorderRadius,\n      textAlign: 'center',\n      shadowColor: 'grey',\n      shadowOffset: {\n        width: 2,\n        height: 3\n      },\n      shadowOpacity: 0.3,\n      padding: viewConstants.textBoxPadding,\n      fontSize: viewConstants.textSize,\n      marginHorizontal: viewConstants.textBoxPadding,\n      color: 'black'\n    },\n    screenBackground: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      backgroundColor: colors.primary\n    },\n    buttonText: {\n      fontSize: viewConstants.textSize,\n      lineHeight: viewConstants.buttonTextLineHeight,\n      fontWeight: 'bold',\n      color: colors.fourth\n    },\n    continueButton: {\n      width: \"42%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: 100,\n      borderTopWidth: 1,\n      height: 42,\n      marginBottom: 20,\n      shadowColor: 'grey',\n      shadowRadius: 10,\n      marginTop: '10%',\n      alignSelf: 'center'\n    },\n    backbutton: {\n      height: 60,\n      alignSelf: 'flex-start',\n      width: 60,\n      backgroundColor: colors.secondary,\n      marginBottom: '15%',\n      borderRadius: 40\n    },\n    inputbar: _objectSpread({\n      flex: 1,\n      justifyContent: 'center'\n    }, Platform.select({\n      web: {\n        marginLeft: '30%',\n        marginRight: '30%'\n      },\n      default: {\n        marginLeft: '5%',\n        marginRight: '5%'\n      }\n    }))\n  });\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.screenBackground\n  }, React.createElement(View, {\n    style: styles.form,\n    onPress: Keyboard.dismiss\n  }, React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate(\"Welcome\");\n    },\n    style: styles.backbutton\n  }, React.createElement(Image, {\n    style: {\n      marginLeft: '10%',\n      marginTop: '15%',\n      width: 40,\n      height: 40,\n      tintColor: colors.primary\n    },\n    source: require(\"../assets/images/back.png\")\n  })), React.createElement(View, {\n    style: styles.header\n  }, React.createElement(Text, {\n    style: styles.headerTitle\n  }, \"Create an Account\"), React.createElement(Text, {\n    style: styles.headerText\n  }, \"Welcome to Taggin. Create a free account to begin sharing your thoughts.\"), React.createElement(Text, {\n    style: styles.linkText,\n    onPress: function onPress() {\n      return navigation.navigate(\"Login\");\n    }\n  }, \"Already have an account?\")), React.createElement(View, {\n    styles: styles.details\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Full Name:\"), React.createElement(TextInput, {\n    enablesReturnKeyAutomatically: true,\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(name) {\n      return setName(name);\n    },\n    defaultValue: name,\n    style: styles.inputText,\n    textContentType: \"name\",\n    autoCompleteType: \"name\",\n    autoCapitalize: \"none\",\n    placeholder: \"Your Actual Name\"\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Username:\"), React.createElement(TextInput, {\n    enablesReturnKeyAutomatically: true,\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(username) {\n      return setUSername(username);\n    },\n    defaultValue: username,\n    style: styles.inputText,\n    textContentType: \"username\",\n    autoCompleteType: \"username\",\n    autoCapitalize: \"none\",\n    placeholder: \"Create a Username\"\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Email:\"), React.createElement(TextInput, {\n    style: styles.inputText,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    defaultValue: email,\n    enablesReturnKeyAutomatically: true,\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoCompleteType: \"email\",\n    autoCapitalize: \"none\",\n    returnKeyType: \"next\",\n    placeholder: \"Enter Your Email ID\"\n  }))), React.createElement(View, {\n    styles: styles.password\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Password:\"), React.createElement(TextInput, {\n    enablesReturnKeyAutomatically: true,\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    defaultValue: password,\n    textContentType: \"newPassword\",\n    autoCompleteType: \"password\",\n    style: styles.inputText,\n    placeholder: \"Create a Password\",\n    autoCapitalize: \"none\"\n  })), React.createElement(View, null, React.createElement(Text, {\n    style: styles.label\n  }, \"Confirm Password:\"), React.createElement(TextInput, {\n    enablesReturnKeyAutomatically: true,\n    secureTextEntry: true,\n    returnKeyType: \"done\",\n    onChangeText: function onChangeText(confirmPassword) {\n      return setConfirmPassword(confirmPassword);\n    },\n    defaultValue: confirmPassword,\n    textContentType: \"newPassword\",\n    autoCompleteType: \"password\",\n    autoCapitalize: \"none\",\n    style: styles.inputText,\n    onSubmitEditing: handleContinuePress,\n    placeholder: \"Confirm your Password\"\n  }))), React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        backgroundColor: pressed ? colors.third : colors.secondary\n      }, styles.continueButton];\n    },\n    onPress: function onPress() {\n      handleContinuePress();\n    }\n  }, React.createElement(Text, {\n    style: [{\n      display: loading ? 'none' : 'flex'\n    }, styles.buttonText]\n  }, \"Continue\"), React.createElement(ActivityIndicator, {\n    style: {\n      display: loading ? 'flex' : 'none'\n    }\n  })))));\n};\n\nexport default SignupScreen2;","map":{"version":3,"sources":["/Users/Abhi/Developer/hashtaggin/ReactNative-taggin/Screens/SignupScreen2.js"],"names":["React","useState","createStackNavigator","TouchableWithoutFeedback","colors","axios","SignupScreen2","navigation","name","setName","email","setEmail","username","setUSername","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","handleContinuePress","Platform","OS","alert","Alert","text","post","userID","interests","then","res","data","status","navigate","error","viewConstants","containerTopMargin","containerBottomMargin","containerHorizontalMargins","headingFontSize","headingWeight","headingFontSizeLandscape","headerBottomMargin","textSize","textSizeLandscape","headerTextLandscapePadding","labelPadding","textBoxBorderWidth","textBoxBorderRadius","textBoxPadding","formHorizontalMargin","formBottomMarginLandscape","buttonTextLineHeight","buttonTextLineHeightLandscape","buttonHeight","buttonHeightLandscape","styles","StyleSheet","create","screenBackground","flex","backgroundColor","primary","container","marginHorizontal","justifyContent","header","marginBottom","flexDirection","width","headerTitle","fontWeight","fontSize","color","third","paddingVertical","paddingTop","headerText","linkText","textDecorationLine","signUpForm","details","label","padding","inputText","borderWidth","borderColor","fourth","borderRadius","textAlign","shadowColor","shadowOffset","height","shadowOpacity","alignItems","buttonText","lineHeight","continueButton","borderTopWidth","shadowRadius","marginTop","alignSelf","backbutton","secondary","inputbar","select","web","marginLeft","marginRight","default","form","Keyboard","dismiss","tintColor","require","pressed","display"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { KeyboardAvoidingView, Alert, SafeAreaView,ActivityIndicator, Pressable, Keyboard, StyleSheet, Text, TextInput, View, Platform, TouchableOpacity, Image } from 'react-native';\nimport { TouchableWithoutFeedback } from 'react-native-gesture-handler';\nimport colors from '../assets/colors';\nimport axios from 'axios';\nconst SignupScreen2 = ({navigation}) => {\n\nconst [name, setName] = useState('')\nconst [email, setEmail] = useState('');\nconst [username, setUSername] = useState('');\nconst [password, setPassword] = useState('');\nconst [confirmPassword, setConfirmPassword] = useState('')\nconst [loading,setLoading] = useState(false)\n\n//checking if user exists and showing an error if it does\n\n//\nconst handleContinuePress = () => {\n    setLoading(true);\n    //checking for empty fields\n    if (email===\"\" || username===\"\" || password===\"\" || confirmPassword === \"\") {\n        if (Platform.OS === 'web'){\n            alert(\"Kindly fill all the fields to continue\")\n        }else {\n            Alert.alert(\n                \"All fields are compulsory\",\n                \"Kindly fill all the fields to continue\",\n                [\n                    {\n                        text: \"Go Back\",\n                    }\n                ]\n            )\n        }\n        setLoading(false);\n    } else if (confirmPassword!=password){\n        if (Platform.OS === 'web'){\n            alert(\"Passwords Don't Match\")\n        }else {\n            Alert.alert(\n                \"Passwords Don't Match\",\n                \"Kindly ensure that your passwords match\",\n                [\n                    {\n                        text: \"Edit Password\",\n                        \n                    }\n                ]\n            )\n        }\n        setLoading(false);\n    }else {\n        axios.post(\"https://fierce-mountain-79115.herokuapp.com/register\",\n            {email: email, password: password, userID: username, name: name, interests: []}\n        ).then(function(res){\n            if(res.data.status != 'error'){\n                navigation.navigate(\"Interests\");\n                setLoading(false);\n            }else{\n                Alert.alert(\n                    res.data.error\n                )\n                setLoading(false);\n            }\n        })\n        \n    }\n}\n\nconst viewConstants = {\n    containerTopMargin: '10%',\n    containerBottomMargin: '16%',\n    containerHorizontalMargins: '7%',\n    headingFontSize: 34,\n    headingWeight: '800',\n    headingFontSizeLandscape: 34,\n    headerBottomMargin: 5,\n    textSize: 15,\n    textSizeLandscape: 18,\n    headerTextLandscapePadding: 80,\n    labelPadding: 10,\n    textBoxBorderWidth: 2,\n    textBoxBorderRadius: 13,\n    textBoxPadding: 10,\n    formHorizontalMargin: 40,\n    formBottomMarginLandscape: 30,\n    buttonTextLineHeight: 21,\n    buttonTextLineHeightLandscape: 21,\n    buttonHeight: 70,\n    buttonHeightLandscape: 45,\n}\nconst styles = StyleSheet.create({\n    screenBackground: {\n        flex: 1,\n        backgroundColor: colors.primary\n    },\n    container: {\n        marginHorizontal: viewConstants.containerHorizontalMargins,\n        flex: 1,\n        justifyContent: 'center',\n       \n        //implementing different code for differnet orientations\n    },\n    header: {\n        marginBottom: viewConstants.headerBottomMargin,\n        flex:  0,\n        flexDirection: 'column',\n        width: '100%',\n    },\n    headerTitle: {\n        fontWeight: viewConstants.headingWeight,\n        fontSize: viewConstants.headingFontSize,\n        color: colors.third,\n        paddingVertical: '3%',\n        paddingTop: 0,\n\n    },\n    headerText: {\n        fontSize:  viewConstants.textSize,\n        paddingTop:  0,\n        color: '#200111',\n    },\n    linkText: {\n        textDecorationLine: 'underline',\n        paddingVertical: '3%',\n        color: 'darkblue',\n        fontSize:  viewConstants.textSize,\n    },  \n    signUpForm:{\n        flex: 1,\n        color: 'black',\n    },\n    details: {\n        flexDirection: 'column',\n        marginHorizontal: viewConstants.formHorizontalMargin,\n        marginBottom: 0\n    },\n    password: {\n        flexDirection: 'column',\n        marginHorizontal: viewConstants.formHorizontalMargin,\n        marginBottom:  0\n    },\n    label: {\n        fontSize: viewConstants.textSize,\n        padding: viewConstants.labelPadding,\n        color: colors.third,\n        fontWeight: '500',\n        marginHorizontal: 0,\n        \n    },\n    inputText: {\n        borderWidth: viewConstants.textBoxBorderWidth,\n        borderColor: 'white',\n        borderWidth: 1,\n        backgroundColor: colors.fourth,\n        borderRadius: viewConstants.textBoxBorderRadius,\n        textAlign: 'center',\n        shadowColor: 'grey',\n        shadowOffset: {width: 2, height: 3},\n        shadowOpacity: 0.3,\n        padding: viewConstants.textBoxPadding,\n        fontSize:  viewConstants.textSize,\n        marginHorizontal: viewConstants.textBoxPadding,\n        color: 'black',\n    },\n    screenBackground: {\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        backgroundColor: colors.primary,\n    },\n    buttonText: {\n        fontSize: viewConstants.textSize,\n        lineHeight: viewConstants.buttonTextLineHeight,\n        fontWeight: 'bold',\n        color: colors.fourth,\n    },\n    continueButton: {\n        width: \"42%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: 100,\n        borderTopWidth: 1,\n        height: 42,\n        marginBottom: 20,\n        shadowColor: 'grey',\n        shadowRadius: 10, \n        marginTop: '10%',\n        alignSelf: 'center'\n    }, \n    backbutton: {\n        height: 60,\n        alignSelf: 'flex-start',\n        width: 60,\n        backgroundColor: colors.secondary,\n        marginBottom: '15%',\n        borderRadius: 40,\n    },\n    inputbar: {\n        flex: 1,\n        justifyContent: 'center',\n        \n        ...Platform.select({\n            web: {\n                marginLeft: '30%',\n                marginRight: '30%',\n            },\n            default: {\n                marginLeft: '5%',\n                marginRight: '5%',\n            },\n        }),\n    },\n})\n    return ( \n        <KeyboardAvoidingView style={styles.screenBackground}>\n            {/*  Wrapping the code with TouchableWithoutFeedback dismisses the keyboard when the user taps out of the input box*/}\n            <View style={styles.form} onPress={ Keyboard.dismiss}>\n                <SafeAreaView style = { styles.container} > \n                    <TouchableOpacity onPress={()=> navigation.navigate(\"Welcome\")} style={styles.backbutton}>\n                        <Image style={{ marginLeft:'10%', marginTop:'15%', width: 40, height: 40, tintColor: colors.primary}} source={require(\"../assets/images/back.png\")}/>\n                    </TouchableOpacity>\n                    <View style = {styles.header}>\n                        <Text \n                            style = {styles.headerTitle}>\n                            Create an Account\n                        </Text>\n                        <Text \n                            style = {styles.headerText} >\n                            Welcome to Taggin. Create a free account to begin sharing your thoughts.\n                        </Text>\n                        <Text \n                            style = {styles.linkText} \n                            onPress={() => navigation.navigate(\"Login\")} >\n                            Already have an account?\n                        </Text>\n                    </View>\n                    <View styles = { styles.details }>\n                        <View>\n                            <Text \n                                style={styles.label} >\n                                Full Name: \n                            </Text>\n                            <TextInput \n                                enablesReturnKeyAutomatically = {true}\n                                returnKeyType=\"next\"\n                                onChangeText = { name => setName(name) }\n                                defaultValue = {name}\n                                style={styles.inputText} \n                                textContentType='name'   // Only for iOS\n                                autoCompleteType=\"name\" // Only for Android\n                                autoCapitalize='none'\n                                placeholder=\"Your Actual Name\" />\n                        </View>\n                        <View>\n                            <Text \n                                style={styles.label} >\n                                Username: \n                            </Text>\n                            <TextInput \n                                enablesReturnKeyAutomatically = {true}\n                                returnKeyType=\"next\"\n                                onChangeText = { username => setUSername(username) }\n                                defaultValue = {username}\n                                style={styles.inputText} \n                                textContentType='username'   // Only for iOS\n                                autoCompleteType=\"username\" // Only for Android\n                                autoCapitalize='none'\n                                placeholder=\"Create a Username\" />\n                        </View>\n                        <View>\n                            <Text \n                                style={styles.label}>\n                                Email: \n                            </Text>\n                            <TextInput\n                                style={styles.inputText} \n                                onChangeText = { email => setEmail(email) }\n                                defaultValue = {email}\n                                enablesReturnKeyAutomatically = {true}\n                                keyboardType = 'email-address'     // Works on all platforms\n                                textContentType = 'emailAddress'  // Only for iOS\n                                autoCompleteType='email'         // Only for Android\n                                autoCapitalize='none'           // Works on all platforms\n                                returnKeyType=\"next\"\n                                // onSubmitEditing={() => { this.secondTextInput.focus() }}\n                                placeholder=\"Enter Your Email ID\" />\n                        </View>\n                    </View>\n                    <View styles = { styles.password }>\n                        <View>\n                            <Text \n                                style={styles.label}>\n                                Password: \n                            </Text>\n                            <TextInput \n                                enablesReturnKeyAutomatically = {true}\n                                secureTextEntry={true} \n                                returnKeyType=\"next\"\n                                onChangeText = { password => setPassword(password) }\n                                defaultValue = {password}\n                                textContentType = \"newPassword\" \n                                autoCompleteType='password' \n                                style={styles.inputText} \n                                placeholder=\"Create a Password\" \n                                autoCapitalize='none'/>\n                        </View>\n                        <View>\n                            <Text \n                                style={styles.label}>\n                                Confirm Password: \n                            </Text>\n                            <TextInput \n                                enablesReturnKeyAutomatically = {true}\n                                secureTextEntry={true} \n                                returnKeyType= \"done\"\n                                onChangeText = { confirmPassword => setConfirmPassword(confirmPassword) }\n                                defaultValue = {confirmPassword}\n                                textContentType = \"newPassword\" \n                                autoCompleteType='password' \n                                autoCapitalize='none'\n                                style={styles.inputText} \n                                onSubmitEditing = { handleContinuePress} \n                                placeholder=\"Confirm your Password\"/>\n                        </View>\n                    </View>\n                    <Pressable style={({pressed}) => [{\n                        backgroundColor: pressed ? colors.third : colors.secondary,},\n                        styles.continueButton,]}\n                        onPress={() => { handleContinuePress()}}>\n                        <Text style={[ {display: loading?'none':'flex'}, styles.buttonText]}>\n                            Continue\n                        </Text>\n                        <ActivityIndicator style={{ display: loading? 'flex' : 'none'}} />\n                    </Pressable>\n                </SafeAreaView>\n            </View>\n            \n        </KeyboardAvoidingView>\n     );\n}\n\n \nexport default SignupScreen2;"]},"metadata":{},"sourceType":"module"}